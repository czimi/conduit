{
  "uid" : "d582c0c93b9cbcf2",
  "name" : "test_create_new_blogposts_from_file",
  "fullName" : "test_conduit.test_TC08_upload_post_from_file.TestConduitApp#test_create_new_blogposts_from_file",
  "historyId" : "6d8522a273f6bbb6639dd8afc50ee8f9",
  "time" : {
    "start" : 1628846613098,
    "stop" : 1628846628011,
    "duration" : 14913
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert ['The 1st aut...Próba Pista,'] == []\n  Left contains one more item: 'The 1st auto upload, posted by Próba Pista,'\n  Use -v to get the full diff",
  "statusTrace" : "self = <test_TC08_upload_post_from_file.TestConduitApp object at 0x7f3be5420f10>\n\n    def test_create_new_blogposts_from_file(self):\n        conduit_login(self.browser)\n        time.sleep(3)\n    \n        csv_about_content_list = []\n    \n        with open('test_conduit/data_for_auto_upload.csv', 'r', encoding=\"utf-8\") as upload_file:\n            csv_reader = csv.reader(upload_file, delimiter=';')\n            next(csv_reader)\n            for row in csv_reader:\n                input_elements = [i.strip(' ') for i in row]\n                self.browser.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n                time.sleep(3)\n                article_title_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Article Title\"]')\n                article_about_input = self.browser.find_element_by_xpath(\n                    '//input[contains(@placeholder,\"this article about?\")]')\n                article_text_input = self.browser.find_element_by_xpath(\n                    '//textarea[@placeholder=\"Write your article (in markdown)\"]')\n                article_tag_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Enter tags\"]')\n                time.sleep(3)\n                article_title_input.send_keys(input_elements[0])\n                article_about_input.send_keys(input_elements[1])\n                article_text_input.send_keys(input_elements[2])\n                article_tag_input.send_keys(input_elements[3])\n                csv_about_content_list.append(input_elements[1])\n    \n                self.browser.find_element_by_xpath('//button[contains(.,\"Publish Article\")]').click()\n                time.sleep(3)\n    \n                uploaded_articles_about = self.browser.find_elements_by_xpath(f'//a[@href=\"#/@Próba Pista {username_variable}/\"]//parent::div//following-sibling::a/p')\n>               assert csv_about_content_list == uploaded_articles_about\nE               AssertionError: assert ['The 1st aut...Próba Pista,'] == []\nE                 Left contains one more item: 'The 1st auto upload, posted by Próba Pista,'\nE                 Use -v to get the full diff\n\ntest_conduit/test_TC08_upload_post_from_file.py:51: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert ['The 1st aut...Próba Pista,'] == []\n  Left contains one more item: 'The 1st auto upload, posted by Próba Pista,'\n  Use -v to get the full diff",
    "statusTrace" : "self = <test_TC08_upload_post_from_file.TestConduitApp object at 0x7f3be5420f10>\n\n    def test_create_new_blogposts_from_file(self):\n        conduit_login(self.browser)\n        time.sleep(3)\n    \n        csv_about_content_list = []\n    \n        with open('test_conduit/data_for_auto_upload.csv', 'r', encoding=\"utf-8\") as upload_file:\n            csv_reader = csv.reader(upload_file, delimiter=';')\n            next(csv_reader)\n            for row in csv_reader:\n                input_elements = [i.strip(' ') for i in row]\n                self.browser.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n                time.sleep(3)\n                article_title_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Article Title\"]')\n                article_about_input = self.browser.find_element_by_xpath(\n                    '//input[contains(@placeholder,\"this article about?\")]')\n                article_text_input = self.browser.find_element_by_xpath(\n                    '//textarea[@placeholder=\"Write your article (in markdown)\"]')\n                article_tag_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Enter tags\"]')\n                time.sleep(3)\n                article_title_input.send_keys(input_elements[0])\n                article_about_input.send_keys(input_elements[1])\n                article_text_input.send_keys(input_elements[2])\n                article_tag_input.send_keys(input_elements[3])\n                csv_about_content_list.append(input_elements[1])\n    \n                self.browser.find_element_by_xpath('//button[contains(.,\"Publish Article\")]').click()\n                time.sleep(3)\n    \n                uploaded_articles_about = self.browser.find_elements_by_xpath(f'//a[@href=\"#/@Próba Pista {username_variable}/\"]//parent::div//following-sibling::a/p')\n>               assert csv_about_content_list == uploaded_articles_about\nE               AssertionError: assert ['The 1st aut...Próba Pista,'] == []\nE                 Left contains one more item: 'The 1st auto upload, posted by Próba Pista,'\nE                 Use -v to get the full diff\n\ntest_conduit/test_TC08_upload_post_from_file.py:51: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "edf472e045471f7e",
      "name" : "log",
      "source" : "edf472e045471f7e.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "1cac5cc950f6fb2b",
      "name" : "stderr",
      "source" : "1cac5cc950f6fb2b.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_conduit"
  }, {
    "name" : "suite",
    "value" : "test_TC08_upload_post_from_file"
  }, {
    "name" : "subSuite",
    "value" : "TestConduitApp"
  }, {
    "name" : "host",
    "value" : "fv-az74-94"
  }, {
    "name" : "thread",
    "value" : "3757-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_conduit.test_TC08_upload_post_from_file"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d582c0c93b9cbcf2.json",
  "parameterValues" : [ ]
}